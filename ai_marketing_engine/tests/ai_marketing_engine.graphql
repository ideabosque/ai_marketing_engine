fragment QuestionInfo on QuestionType {
    companyId
    questionUuid
    questionGroup
    question
    priority
    attribute
    optionValues
    condition
    updatedBy
    updatedAt
    createdAt
}

fragment QuestionListInfo on QuestionListType {
    questionList{
        ...QuestionInfo
    }
    pageSize
    pageNumber
    total
}

fragment QuestionCriteriaInfo on QuestionCriteriaType {
    companyId
    questionGroup
    region
    questionCriteria
    weight
    updatedBy
    updatedAt
    createdAt
}

fragment QuestionCriteriaListInfo on QuestionCriteriaListType {
    questionCriteriaList{
        ...QuestionCriteriaInfo
    }
    pageSize
    pageNumber
    total
}

fragment PlaceInfo on PlaceType {
    region
    placeUuid
    latitude
    longitude
    businessName
    address
    phoneNumber
    website
    types
    updatedBy
    createdAt
    updatedAt
}

fragment PlaceListInfo on PlaceListType {
    placeList{
        ...PlaceInfo
    }
    pageSize
    pageNumber
    total
}

fragment ContactProfileInfo on ContactProfileType {
    place
    contactUuid
    email
    firstName
    lastName
    data
    updatedBy
    createdAt
    updatedAt
}

fragment ContactProfileListInfo on ContactProfileListType {
    contactProfileList{
        ...ContactProfileInfo
    }
    pageSize
    pageNumber
    total
}

fragment CompanyContactProfileInfo on CompanyContactProfileType {
    companyId
    contactProfile
    email
    corporationProfile
    data
    updatedBy
    createdAt
    updatedAt
}

fragment CompanyContactProfileListInfo on CompanyContactProfileListType {
    companyContactProfileList{
        ...CompanyContactProfileInfo
    }
    pageSize
    pageNumber
    total
}

fragment CorporationProfileInfo on CorporationProfileType {
    corporationType
    corporationUuid
    externalId
    businessName
    categories
    address
    data
    updatedBy
    createdAt
    updatedAt
}

fragment CorporationProfileListInfo on CorporationProfileListType {
    corporationProfileList{
        ...CorporationProfileInfo
    }
    pageSize
    pageNumber
    total
}

fragment CorporationPlaceInfo on CorporationPlaceType {
    corporationProfile
    place
    updatedBy
    createdAt
    updatedAt
}

fragment CorporationPlaceListInfo on CorporationPlaceListType {
    corporationPlaceList{
        ...CorporationPlaceInfo
    }
    pageSize
    pageNumber
    total
}

fragment CompanyCorporationProfileInfo on CompanyCorporationProfileType {
    companyId
    corporationProfile
    externalId
    data
    updatedBy
    createdAt
    updatedAt
}

fragment CompanyCorporationProfileListInfo on CompanyCorporationProfileListType {
    companyCorporationProfileList{
        ...CompanyCorporationProfileInfo
    }
    pageSize
    pageNumber
    total
}

fragment ContactChatbotHistoryInfo on ContactChatbotHistoryType {
    companyId
    timestamp
    contactUuid
    placeUuid
    region
    assistantId
    threadId
    assistantType
}

fragment ContactChatbotHistoryListInfo on ContactChatbotHistoryListType {
    contactChatbotHistoryList{
        ...ContactChatbotHistoryInfo
    }
    pageSize
    pageNumber
    total
}

fragment UtmTagDataCollectionInfo on UtmTagDataCollectionType {
    companyId
    collectionUuid
    tagName
    place
    contactProfile
    keyword
    utmCampaign
    utmContent
    utmMedium
    utmSource
    utmTerm
    createdAt
}

fragment UtmTagDataCollectionListInfo on UtmTagDataCollectionListType {
    utmTagDataCollectionList{
        ...UtmTagDataCollectionInfo
    }
    pageSize
    pageNumber
    total
}

query ping {
    ping
}

query getQuestion(
    $companyId: String!,
    $questionUuid: String!
) {
    question(
        companyId: $companyId,
        questionUuid: $questionUuid
    ) {
        ...QuestionInfo
    }
}

query getQuestionList(
    $pageNumber: Int, 
    $limit: Int,
    $companyId: String,
    $questionGroups: [String],
    $question: String,
    $attribute: String
) {
    questionList(
        pageNumber: $pageNumber,
        limit: $limit,
        companyId: $companyId,
        questionGroups: $questionGroups,
        question: $question,
        attribute: $attribute
    ) {
        ...QuestionListInfo
    }
}

mutation insertUpdateQuestion(
    $companyId: String!,
    $questionUuid: String,
    $questionGroup: String,
    $question: String,
    $priority: Int,
    $attribute: String,
    $optionValues: [String],
    $condition: [JSON],
    $updatedBy: String!
) {
    insertUpdateQuestion(
        companyId: $companyId,
        questionUuid: $questionUuid,
        questionGroup: $questionGroup,
        question: $question,
        priority: $priority,
        attribute: $attribute,
        optionValues: $optionValues,
        condition: $condition,
        updatedBy: $updatedBy
    ) {
        question{
            ...QuestionInfo
        }
    }
}

mutation deleteQuestion(
    $companyId: String!,
    $questionUuid: String!
) {
    deleteQuestion(
        companyId: $companyId,
        questionUuid: $questionUuid
    ) {
        ok
    }
}

query getQuestionCriteria(
    $companyId: String!,
    $questionGroup: String!
) {
    questionCriteria(
        companyId: $companyId,
        questionGroup: $questionGroup
    ) {
        ...QuestionCriteriaInfo
    }
}

query getQuestionCriteriaList(
    $pageNumber: Int, 
    $limit: Int,
    $companyId: String,
    $region: String,
    $questionCriteria: JSON
) {
    questionCriteriaList(
        pageNumber: $pageNumber,
        limit: $limit,
        companyId: $companyId,
        region: $region,
        questionCriteria: $questionCriteria
    ) {
        ...QuestionCriteriaListInfo
    }
}

mutation insertUpdateQuestionCriteria(
    $companyId: String!,
    $questionGroup: String!
    $region: String!,
    $questionCriteria: JSON,
    $weight: Int,
    $updatedBy: String!
) {
    insertUpdateQuestionCriteria(
        companyId: $companyId,
        questionGroup: $questionGroup,
        region: $region,
        questionCriteria: $questionCriteria,
        weight: $weight,
        updatedBy: $updatedBy
    ) {
        questionCriteria{
            ...QuestionCriteriaInfo
        }
    }
}

mutation deleteQuestionCriteria(
    $companyId: String!,
    $questionGroup: String!
) {
    deleteQuestionCriteria(
        companyId: $companyId,
        questionGroup: $questionGroup
    ) {
        ok
    }
}

query getPlace(
    $region: String!,
    $placeUuid: String!
) {
    place(
        region: $region,
        placeUuid: $placeUuid
    ) {
        ...PlaceInfo
    }
}

query getPlaceList(
    $pageNumber: Int, 
    $limit: Int,
    $region: String,
    $latitude: String,
    $longitude: String,
    $businessName: String,
    $address: String,
    $website: String
) {
    placeList(
        pageNumber: $pageNumber,
        limit: $limit,
        region: $region,
        latitude: $latitude,
        longitude: $longitude,
        businessName: $businessName,
        address: $address,
        website: $website
    ) {
        ...PlaceListInfo
    }
}

mutation insertUpdatePlace(
    $region: String!,
    $placeUuid: String,
    $latitude: String,
    $longitude: String,
    $businessName: String,
    $address: String,
    $phoneNumber: String,
    $website: String,
    $types: [String],
    $updatedBy: String!
) {
    insertUpdatePlace(
        region: $region,
        placeUuid: $placeUuid,
        latitude: $latitude,
        longitude: $longitude,
        businessName: $businessName,
        address: $address,
        phoneNumber: $phoneNumber,
        website: $website,
        types: $types,
        updatedBy: $updatedBy
    ) {
        place{
            ...PlaceInfo
        }
    }
}

mutation deletePlace(
    $region: String!,
    $placeUuid: String!
) {
    deletePlace(
        region: $region,
        placeUuid: $placeUuid
    ) {
        ok
    }
}

query getContactProfile(
    $placeUuid: String!,
    $contactUuid: String!
) {
    contactProfile(
        placeUuid: $placeUuid,
        contactUuid: $contactUuid
    ) {
        ...ContactProfileInfo
    }
}

query getContactProfileList(
    $pageNumber: Int, 
    $limit: Int,
    $placeUuid: String,
    $email: String,
    $regions: [String],
    $firstName: String,
    $lastName: String
) {
    contactProfileList(
        pageNumber: $pageNumber,
        limit: $limit,
        placeUuid: $placeUuid,
        email: $email,
        regions: $regions,
        firstName: $firstName,
        lastName: $lastName
    ) {
        ...ContactProfileListInfo
    }
}

mutation insertUpdateContactProfile(
    $placeUuid: String!,
    $contactUuid: String,
    $email: String,
    $region: String,
    $firstName: String,
    $lastName: String,
    $data: JSON,
    $updatedBy: String!
) {
    insertUpdateContactProfile(
        placeUuid: $placeUuid,
        contactUuid: $contactUuid,
        email: $email,
        region: $region,
        firstName: $firstName,
        lastName: $lastName,
        data: $data,
        updatedBy: $updatedBy
    ) {
        contactProfile{
            ...ContactProfileInfo
        }
    }
}

mutation deleteContactProfile(
    $placeUuid: String!,
    $contactUuid: String!
) {
    deleteContactProfile(
        placeUuid: $placeUuid,
        contactUuid: $contactUuid
    ) {
        ok
    }
}

query getCompanyContactProfile(
    $companyId: String!,
    $contactUuid: String!
) {
    companyContactProfile(
        companyId: $companyId,
        contactUuid: $contactUuid
    ) {
        ...CompanyContactProfileInfo
    }
}

query getCompanyContactProfileList(
    $pageNumber: Int, 
    $limit: Int,
    $companyId: String,
    $email: String,
    $corporationTypes: [String]
) {
    companyContactProfileList(
        pageNumber: $pageNumber,
        limit: $limit,
        companyId: $companyId,
        email: $email,
        corporationTypes: $corporationTypes
    ) {
        ...CompanyContactProfileListInfo
    }
}

mutation insertUpdateCompanyContactProfile(
    $companyId: String!,
    $contactUuid: String!,
    $email: String,
    $placeUuid: String,
    $corporationType: String,
    $corporationUuid: String,
    $data: JSON,
    $updatedBy: String!
) {
    insertUpdateCompanyContactProfile(
        companyId: $companyId,
        contactUuid: $contactUuid,
        email: $email,
        placeUuid: $placeUuid,
        corporationType: $corporationType,
        corporationUuid: $corporationUuid,
        data: $data,
        updatedBy: $updatedBy
    ) {
        companyContactProfile{
            ...CompanyContactProfileInfo
        }
    }
}

mutation deleteCompanyContactProfile(
    $companyId: String!,
    $contactUuid: String!
) {
    deleteCompanyContactProfile(
        companyId: $companyId,
        contactUuid: $contactUuid
    ) {
        ok
    }
}

query getCorporationProfile(
    $corporationType: String!,
    $corporationUuid: String!
) {
    corporationProfile(
        corporationType: $corporationType,
        corporationUuid: $corporationUuid
    ) {
        ...CorporationProfileInfo
    }
}

query getCorporationProfileList(
    $pageNumber: Int, 
    $limit: Int,
    $corporationType: String,
    $externalId: String,
    $businessName: String,
    $category: String
) {
    corporationProfileList(
        pageNumber: $pageNumber,
        limit: $limit,
        corporationType: $corporationType,
        externalId: $externalId,
        businessName: $businessName,
        category: $category
    ) {
        ...CorporationProfileListInfo
    }
}

mutation insertUpdateCorporationProfile(
    $corporationType: String!,
    $corporationUuid: String,
    $externalId: String,
    $businessName: String,
    $categories: [String],
    $address: JSON,
    $data: JSON,
    $updatedBy: String!
) {
    insertUpdateCorporationProfile(
        corporationType: $corporationType,
        corporationUuid: $corporationUuid,
        externalId: $externalId,
        businessName: $businessName,
        categories: $categories,
        address: $address,
        data: $data,
        updatedBy: $updatedBy
    ) {
        corporationProfile{
            ...CorporationProfileInfo
        }
    }
}

mutation deleteCorporationProfile(
    $corporationType: String!,
    $corporationUuid: String!
) {
    deleteCorporationProfile(
        corporationType: $corporationType,
        corporationUuid: $corporationUuid
    ) {
        ok
    }
}

query getCorporationPlace(
    $region: String!,
    $corporationUuid: String!
) {
    corporationPlace(
        region: $region,
        corporationUuid: $corporationUuid
    ) {
        ...CorporationPlaceInfo
    }
}

query getCorporationPlaceList(
    $pageNumber: Int, 
    $limit: Int,
    $region: String,
    $placeUuid: String,
    $corporationTypes: [String]
) {
    corporationPlaceList(
        pageNumber: $pageNumber,
        limit: $limit,
        region: $region,
        placeUuid: $placeUuid, 
        corporationTypes: $corporationTypes
    ) {
        ...CorporationPlaceListInfo
    }
}

mutation insertUpdateCorporationPlace(
    $region: String!,
    $corporationUuid: String!,
    $placeUuid: String!,
    $corporationType: String!,
    $updatedBy: String!
) {
    insertUpdateCorporationPlace(
        region: $region,
        corporationUuid: $corporationUuid,
        placeUuid: $placeUuid,
        corporationType: $corporationType,
        updatedBy: $updatedBy
    ) {
        corporationPlace{
            ...CorporationPlaceInfo
        }
    }
}

mutation deleteCorporationPlace(
    $region: String!,
    $corporationUuid: String!
) {
    deleteCorporationPlace(
        region: $region,
        corporationUuid: $corporationUuid
    ) {
        ok
    }
}

query getCompanyCorporationProfile(
    $companyId: String!,
    $corporationUuid: String!
) {
    companyCorporationProfile(
        companyId: $companyId,
        corporationUuid: $corporationUuid
    ) {
        ...CompanyCorporationProfileInfo
    }
}

query getCompanyCorporationProfileList(
    $pageNumber: Int, 
    $limit: Int,
    $companyId: String,
    $externalId: String,
    $corporationTypes: [String]
) {
    companyCorporationProfileList(
        pageNumber: $pageNumber,
        limit: $limit,
        companyId: $companyId,
        externalId: $externalId,
        corporationTypes: $corporationTypes
    ) {
        ...CompanyCorporationProfileListInfo
    }
}

mutation insertUpdateCompanyCorporationProfile(
    $companyId: String!,
    $corporationUuid: String!,
    $externalId: String,
    $corporationType: String,
    $data: JSON,
    $updatedBy: String!
) {
    insertUpdateCompanyCorporationProfile(
        companyId: $companyId,
        corporationUuid: $corporationUuid,
        externalId: $externalId,
        corporationType: $corporationType,
        data: $data,
        updatedBy: $updatedBy
    ) {
        companyCorporationProfile{
            ...CompanyCorporationProfileInfo
        }
    }
}

mutation deleteCompanyCorporationProfile(
    $companyId: String!,
    $corporationUuid: String!
) {
    deleteCompanyCorporationProfile(
        companyId: $companyId,
        corporationUuid: $corporationUuid
    ) {
        ok
    }
}

query getContactChatbotHistory(
    $companyId: String!,
    $timestamp: Int!
) {
    contactChatbotHistory(
        companyId: $companyId,
        timestamp: $timestamp
    ) {
        ...ContactChatbotHistoryInfo
    }
}

query getContactChatbotHistoryList(
    $pageNumber: Int, 
    $limit: Int,
    $companyId: String,
    $contactUuid: String,
    $placeUuids: [String],
    $regions: [String],
    $assistantTypes: [String]
) {
    contactChatbotHistoryList(
        pageNumber: $pageNumber,
        limit: $limit,
        companyId: $companyId,
        contactUuid: $contactUuid,
        placeUuids: $placeUuids,
        regions: $regions,
        assistantTypes: $assistantTypes
    ) {
        ...ContactChatbotHistoryListInfo
    }
}

mutation insertContactChatbotHistory(
    $companyId: String!,
    $timestamp: Int!,
    $contactUuid: String!,
    $placeUuid: String!,
    $region: String!,
    $assistantId: String!,
    $threadId: String!,
    $assistantType: String!
) {
    insertContactChatbotHistory(
        companyId: $companyId,
        timestamp: $timestamp,
        contactUuid: $contactUuid,
        placeUuid: $placeUuid,
        region: $region,
        assistantId: $assistantId,
        threadId: $threadId,
        assistantType: $assistantType
    ) {
        contactChatbotHistory{
            ...ContactChatbotHistoryInfo
        }
    }
}

mutation deleteContactChatbotHistory(
    $companyId: String!,
    $timestamp: Int!
) {
    deleteContactChatbotHistory(
        companyId: $companyId,
        timestamp: $timestamp
    ) {
        ok
    }
}

query getUtmTagDataCollection(
    $companyId: String!,
    $collectionUuid: String!
) {
    utmTagDataCollection(
        companyId: $companyId,
        collectionUuid: $collectionUuid
    ) {
        ...UtmTagDataCollectionInfo
    }
}

query getUtmTagDataCollectionList(
    $pageNumber: Int, 
    $limit: Int,
    $companyId: String
) {
    utmTagDataCollectionList(
        pageNumber: $pageNumber,
        limit: $limit,
        companyId: $companyId
    ) {
        ...UtmTagDataCollectionListInfo
    }
}

mutation insertUtmTagDataCollection(
    $companyId: String!,
    $tagName: String!,
    $placeUuid: String!,
    $contactUuid: String!,
    $region: String!,
    $keyword: String!,
    $utmCampaign: String!,
    $utmContent: String!,
    $utmMedium: String!,
    $utmSource: String!,
    $utmTerm: String!
) {
    insertUtmTagDataCollection(
        companyId: $companyId,
        tagName: $tagName,
        placeUuid: $placeUuid,
        contactUuid: $contactUuid,
        region: $region,
        keyword: $keyword,
        utmCampaign: $utmCampaign,
        utmContent: $utmContent,
        utmMedium: $utmMedium,
        utmSource: $utmSource,
        utmTerm: $utmTerm
    ) {
        utmTagDataCollection{
            ...UtmTagDataCollectionInfo
        }
    }
}

mutation deleteUtmTagDataCollection(
    $companyId: String!,
    $collectionUuid: String!
) {
    deleteUtmTagDataCollection(
        companyId: $companyId,
        collectionUuid: $collectionUuid
    ) {
        ok
    }
}